using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main()
    {
        bool grajDalej = true;

        while (grajDalej)
        {
            // Punkt 1: Pobierz liczbę kostek od użytkownika
            int liczbaKostek = 0;
            while (liczbaKostek < 3 || liczbaKostek > 10)
            {
                Console.Write("Podaj liczbę kostek do rzucenia (3-10): ");
                if (int.TryParse(Console.ReadLine(), out liczbaKostek) && liczbaKostek >= 3 && liczbaKostek <= 10)
                {
                    break;
                }
                Console.WriteLine("Błąd: liczba kostek musi być z przedziału 3-10.");
            }

            // Punkt 2: Rzuć kostkami
            List<int> wyniki = RzucKoscmi(liczbaKostek);

            // Punkt 3: Wyświetl wyniki
            for (int i = 0; i < wyniki.Count; i++)
            {
                Console.WriteLine($"Kostka {i + 1}: {wyniki[i]}");
            }

            // Oblicz punkty
            int punkty = ObliczPunkty(wyniki);
            Console.WriteLine($"Suma punktów: {punkty}");

            // Zapytaj gracza, czy chce zagrać ponownie
            Console.Write("Czy chcesz zagrać ponownie? (t/n): ");
            string decyzja = Console.ReadLine()?.Trim().ToLower();
            if (decyzja != "t")
            {
                grajDalej = false;
                Console.WriteLine("Dziękujemy za grę!");
            }
        }
    }

    static List<int> RzucKoscmi(int liczbaKostek)
    {
        Random random = new Random();
        List<int> wyniki = new List<int>();
        for (int i = 0; i < liczbaKostek; i++)
        {
            wyniki.Add(random.Next(1, 7));
        }
        return wyniki;
    }

    static int ObliczPunkty(List<int> wyniki)
    {
        int punkty = 0;
        for (int liczba = 1; liczba <= 6; liczba++)
        {
            int wystapienia = wyniki.Count(x => x == liczba);
            if (wystapienia > 1)
            {
                punkty += liczba * wystapienia;
            }
        }
        return punkty;
    }
}